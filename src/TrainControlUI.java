/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package journeyms;

import javax.swing.DefaultComboBoxModel;
import javax.swing.*;
/**
 *
 * @author Group_94
 */
public class TrainControlUI extends javax.swing.JFrame {

    /**
     *
     */
    public static DefaultComboBoxModel TrainListModel;
    VirtualTime StopTime;
    Train t = null;
    /**
     * Creates new form TrainControlUI
     */
    public TrainControlUI() {
        TrainListModel = new DefaultComboBoxModel();
        this.updateTrainList();
        initComponents();
        trainButtonEnable(false);//Before the train start, driver cannot control the train
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        TrainStartButton = new javax.swing.JButton();
        StopButton = new javax.swing.JButton();
        TrainViewPanel = new javax.swing.JPanel();
        javax.swing.JLabel l=new javax.swing.JLabel();
        Icon icon=new ImageIcon("TrainView.png");     //在此直接创建对象
        l.setIcon(icon);
        l.setBounds(0, 0, icon.getIconWidth(),icon.getIconHeight());
        TrainViewPanel.add(l,new Integer(Integer.MIN_VALUE));
        canvas1 = new java.awt.Canvas();
        TimeLabel3 = new javax.swing.JLabel();
        TrainList = new javax.swing.JComboBox<>();
        abc = new javax.swing.JLabel();
        TrainNameLabel = new javax.swing.JLabel();
        WarningSign = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        InfoOnTrain = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(0, 485));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel9.setText("Choose Train:");

        TrainStartButton.setText("GO");
        TrainStartButton.setDefaultCapable(false);
        TrainStartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TrainStartButtonActionPerformed(evt);
            }
        });

        StopButton.setText("Stop");
        StopButton.setDefaultCapable(false);
        StopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StopButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TrainViewPanelLayout = new javax.swing.GroupLayout(TrainViewPanel);
        TrainViewPanel.setLayout(TrainViewPanelLayout);
        TrainViewPanelLayout.setHorizontalGroup(
            TrainViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TrainViewPanelLayout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addComponent(canvas1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(458, Short.MAX_VALUE))
        );
        TrainViewPanelLayout.setVerticalGroup(
            TrainViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TrainViewPanelLayout.createSequentialGroup()
                .addContainerGap(209, Short.MAX_VALUE)
                .addComponent(canvas1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );

        TimeLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        TimeLabel3.setText("SystemTime");
        TimeLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        TrainList.setModel(TrainListModel);
        TrainList.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                TrainListItemStateChanged(evt);
            }
        });
        TrainList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TrainListActionPerformed(evt);
            }
        });

        abc.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        abc.setText("  ");
        abc.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        TrainNameLabel.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        TrainNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        TrainNameLabel.setText("Journey:\tDriver:");

        WarningSign.setForeground(new java.awt.Color(255, 0, 0));
        WarningSign.setText("   ");

        InfoOnTrain.setBackground(new java.awt.Color(240, 240, 240));
        InfoOnTrain.setColumns(20);
        InfoOnTrain.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        InfoOnTrain.setRows(4);
        jScrollPane1.setViewportView(InfoOnTrain);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(TrainNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(TrainList, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(TimeLabel3))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(WarningSign, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(5, 5, 5)
                                .addComponent(TrainStartButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(86, 86, 86)
                                .addComponent(StopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(TrainViewPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 603, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(40, 40, 40)
                                .addComponent(abc, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TimeLabel3)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(TrainList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(295, 295, 295)
                        .addComponent(abc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(TrainNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(TrainViewPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TrainStartButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(WarningSign))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TrainListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TrainListActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TrainListActionPerformed

    private void TrainListItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_TrainListItemStateChanged

            TrainLabelRefresh();
                   // TODO add your handling code here:
    }//GEN-LAST:event_TrainListItemStateChanged

    private void TrainStartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TrainStartButtonActionPerformed
        int TrainIndex = TrainList.getSelectedIndex();
        Journey j = FindJourney(CentralControl.trainList.get(TrainIndex));
        if (j.getTrain().getStatus()==false) 
        {
            this.WarningSign.setText(" ");
            j.calculateNextOperationTime(JourneyMS.timeControl.CurrentTime());
            j.getTrain().mannualyStartTrain();
            CentralControl.UI.JouneyInfoRefresh();
        }
        else this.WarningSign.setText("Train has already started.");
        TrainLabelRefresh();
    }//GEN-LAST:event_TrainStartButtonActionPerformed

    private void StopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StopButtonActionPerformed
        int TrainIndex = TrainList.getSelectedIndex();
        Journey j = FindJourney(CentralControl.trainList.get(TrainIndex));
        if (j.getTrain().getStatus()==true) 
        {
            j.setMannuallyStopTime(JourneyMS.timeControl.CurrentTime());
            this.WarningSign.setText(" ");
            j.ArrivalTimePaused();
            FindJourney(CentralControl.trainList.get(TrainIndex)).ArrivalTimePaused();
            j.getTrain().mannualyStopTrain();
        }
        else this.WarningSign.setText("Train has already stopped.");  
        TrainLabelRefresh();
    }//GEN-LAST:event_StopButtonActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        this.setDefaultCloseOperation(HIDE_ON_CLOSE);
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TrainControlUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TrainControlUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TrainControlUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TrainControlUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TrainControlUI().setVisible(true);
            }
        });
    }

    /**
     *
     */
    public void TrainLabelRefresh()
    {
            int TrainIndex = TrainList.getSelectedIndex();
            if (TrainIndex != -1)
            {
                t = CentralControl.trainList.get(TrainIndex);
                Journey j = FindJourney(t);
                if (j != null)
                {
                    this.TrainNameLabel.setText("Journey: "+j.getID()+"\t   Driver: "+j.getDriver().getName());//Show info of journey and driver
                    if (j.getTimeToNextOperation()==null && t.IsMannuallyControlled()==false) //If the train arrived at final station
                    {
                        InfoOnTrain.setText("Todays' Journey is finished");
                    }
                    else if (t.getTowardStation().getStation().equals("A")) 
                        {
                            if (j.getTimeToNextOperation().getTimeInString().equals(j.getStartTime().getTimeInString())) //If the train is not starting yet
                            {   
                                InfoOnTrain.setText("Departure Time:\t"+j.getStartTime().getTimeInString()+"\n"+
                                    "Current Speed:\t"+ t.showSpeed()+" km/h\n"+
                                    "Current Status:\t"+ (t.getStatus()?"Running":"Stopped"));
                            }
                            else  //If the train is heading for the last station
                            {
                                InfoOnTrain.setText("Heading to terminal: Central Station\n"+
                                        "Current Speed:\t"+ t.showSpeed()+" km/h\n"+
                                        "Current Status:\t"+ (t.getStatus()?"Running":"Stopped"));
                            }
                        }
                        else if (t.getStatus()==true) //If the train is heading for next stop
                            {
                                InfoOnTrain.setText("Heading Station:\t"+t.getTowardStation().getStation()+"\n"+
                                    "Expected Arrival Time\t"+j.getTimeToNextOperation().getTimeInString()+"\n"+
                                    "Current Speed:\t"+ t.showSpeed()+" km/h\n"+
                                    "Current Status:\t"+ (t.getStatus()?"Running":"Stopped"));
                            }
                            else if (t.IsMannuallyControlled()==false) //If train is arrived at a stop
                                {
                                    InfoOnTrain.setText("Arrived Station:\t"+t.getTowardStation().getStation()+"\n"+
                                        "Departure Time\t"+j.getTimeToNextOperation().getTimeInString()+"\n"+
                                        "Current Speed:\t"+ t.showSpeed()+" km/h\n"+
                                        "Current Status:\t"+ (t.getStatus()?"Running":"Stopped"));
                                }
                                else //If train is mannally stopped
                                {
                                    InfoOnTrain.setText("Heading Station:\t"+t.getTowardStation().getStation()+"\n"+
                                        "Expected Arrival Time\t"+"Unknown \n"+
                                        "Current Speed:\t"+ "0 km/h\n"+
                                        "Current Status:\t"+ (t.getStatus()?"Running":"Stopped")); 
                                }
                }
                else InfoOnTrain.setText("Please apply the train on a journey");
            }
            updateTrainControlButton();
    }

    /**
     *
     */
    public static void updateTrainList()
    {
        if (CentralControl.trainList.size()!=0)
        {
            for (int i=0;i<CentralControl.trainList.size();i++)
            {
                //System.out.println(CentralControl.driverList.get(i).getID().toString());
                TrainListModel.addElement(CentralControl.trainList.get(i).getID());
            }
        }
    }

    /**
     *
     */
    public void updateTrainControlButton()
    {
        int TrainIndex = TrainList.getSelectedIndex();
        if (TrainIndex != -1)
        {
            t = CentralControl.trainList.get(TrainIndex);
            Journey j = FindJourney(t);
            
            if (j.IsFinished()==true||  //If the current journey is finished
                    j.IsJourneyStarted()==false) //If not started
                this.trainButtonEnable(false);
            else this.trainButtonEnable(true);  
        }
    }

    /**
     *
     * @param t
     * @return
     */
    public Journey FindJourney(Train t)
    {
        for (int i=0; i<CentralControl.journeyList.size(); i++)
        {
            Journey j = CentralControl.journeyList.get(i);
            if (t.getID().equals(j.getTrain().getID()))
                return j;
        }
        return null;
    }

    /**
     *
     * @param b
     */
    public void trainButtonEnable(Boolean b)
    {
        this.StopButton.setEnabled(b); 
        this.TrainStartButton.setEnabled(b);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea InfoOnTrain;
    private javax.swing.JButton StopButton;
    public static javax.swing.JLabel TimeLabel3;
    private javax.swing.JComboBox<String> TrainList;
    private javax.swing.JLabel TrainNameLabel;
    private javax.swing.JButton TrainStartButton;
    private javax.swing.JPanel TrainViewPanel;
    private javax.swing.JLabel WarningSign;
    private javax.swing.JLabel abc;
    private java.awt.Canvas canvas1;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
