/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package journeyms;
import java.awt.EventQueue;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import javax.swing.*;
import javax.swing.DefaultListModel;
import javax.swing.ListModel;

/**
 *
 * @author Group_94
 */
public class CentralControlUI extends javax.swing.JFrame {
    public static DefaultListModel DriverListModel,TrainListModel,RouteListModel, JourneyListModel;
    private int DriverIndexSelected=0;
    private String DriverInfoContent = null;
    private String JourneyInfoContent =null;
    private String PrevStationLabel="A",NextStationLabel="B";
    int JourneyIndex=-1;
    private int percentage = 0;
    private int passedPercentage = 0;
    //private String sysTime = null;
    /**
     * Creates new JFrame CentralControlUI
     */
    public CentralControlUI() {
        DriverListModel = new DefaultListModel();
        TrainListModel = new DefaultListModel();
        RouteListModel = new DefaultListModel();
        JourneyListModel = new DefaultListModel();
        this.updateTrainList();
        this.updateDriverList();
        this.updateRouteList();
        this.updateJourneyList();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        DriverList = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        DriverInfo = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TrainsList = new javax.swing.JList<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        TrainInfo = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        AddTrainButton = new javax.swing.JButton();
        DeleteTrainButton = new javax.swing.JButton();
        AddDriverButton = new javax.swing.JButton();
        DeleteDriverButton = new javax.swing.JButton();
        TimeLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        RoutesList = new javax.swing.JList<>();
        jScrollPane6 = new javax.swing.JScrollPane();
        RouteInfo = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        AddRouteButton = new javax.swing.JButton();
        DeleteRouteButton = new javax.swing.JButton();
        TimeLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        TimeLabel2 = new javax.swing.JLabel();
        AddJourney = new javax.swing.JButton();
        DeleteJourneyButton = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        JourneyList = new javax.swing.JList<>();
        jScrollPane8 = new javax.swing.JScrollPane();
        JourneyInfo = new javax.swing.JTextArea();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        nextStationLabel = new javax.swing.JLabel();
        previousStationLabel = new javax.swing.JLabel();
        JourneyLabel1 = new javax.swing.JLabel();
        JourneyLabel2 = new javax.swing.JLabel();
        JourneyProgressBar = new javax.swing.JProgressBar();
        JourneyLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Journey Management System");
        setLocation(new java.awt.Point(1000, 0));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                ClosingUI(evt);
            }
        });

        jTabbedPane1.setToolTipText("Information about drivers and trains");

        DriverList.setModel(DriverListModel);
        DriverList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                DriverListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(DriverList);

        DriverInfo.setColumns(20);
        DriverInfo.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        DriverInfo.setRows(5);
        DriverInfo.setText(DriverInfoContent);
        jScrollPane2.setViewportView(DriverInfo);
        DriverInfo.getAccessibleContext().setAccessibleParent(DriverList);

        jLabel1.setText("Drivers List");

        jLabel2.setText("Driver Info");

        TrainsList.setModel(TrainListModel);
        TrainsList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                TrainsListValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(TrainsList);

        TrainInfo.setColumns(20);
        TrainInfo.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        TrainInfo.setRows(5);
        TrainInfo.setText(DriverInfoContent);
        jScrollPane4.setViewportView(TrainInfo);

        jLabel3.setText("Trains List");

        jLabel4.setText("Train Info");

        AddTrainButton.setText("Add Another Train");
        AddTrainButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddTrainButtonActionPerformed(evt);
            }
        });

        DeleteTrainButton.setText("Delete Chosen Train");
        DeleteTrainButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteTrainButtonActionPerformed(evt);
            }
        });

        AddDriverButton.setText("Add Another Driver");
        AddDriverButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddDriverButtonActionPerformed(evt);
            }
        });

        DeleteDriverButton.setText("Delete Chosen Driver");
        DeleteDriverButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteDriverButtonActionPerformed(evt);
            }
        });

        TimeLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        TimeLabel.setText("SystemTime");
        TimeLabel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        TimeLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TimeLabelMousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(77, 77, 77)
                                .addComponent(jLabel4))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(AddTrainButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(DeleteTrainButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(AddDriverButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(DeleteDriverButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(77, 77, 77)
                                .addComponent(jLabel2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(33, 33, 33))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(TimeLabel))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(TimeLabel)
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddTrainButton)
                    .addComponent(AddDriverButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DeleteTrainButton)
                    .addComponent(DeleteDriverButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Trains and Drivers", jPanel1);

        RoutesList.setModel(RouteListModel);
        RoutesList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                RoutesListValueChanged(evt);
            }
        });
        jScrollPane5.setViewportView(RoutesList);

        RouteInfo.setColumns(20);
        RouteInfo.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        RouteInfo.setRows(5);
        jScrollPane6.setViewportView(RouteInfo);

        jLabel5.setText("Route List");

        jLabel6.setText("Route Info");

        AddRouteButton.setText("Add Another Route");
        AddRouteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddRouteButtonActionPerformed(evt);
            }
        });

        DeleteRouteButton.setText("Delete Chosen Route");
        DeleteRouteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteRouteButtonActionPerformed(evt);
            }
        });

        TimeLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        TimeLabel1.setText("SystemTime");
        TimeLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        TimeLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TimeLabel1MousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(AddRouteButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(DeleteRouteButton, javax.swing.GroupLayout.Alignment.LEADING))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 576, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(52, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(TimeLabel1))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel5))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6))
                    .addComponent(TimeLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(AddRouteButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DeleteRouteButton)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Routes Management", jPanel2);

        TimeLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        TimeLabel2.setText("SystemTime");
        TimeLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        TimeLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TimeLabel2MousePressed(evt);
            }
        });

        AddJourney.setText("Add Another Journey");
        AddJourney.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddJourneyActionPerformed(evt);
            }
        });

        DeleteJourneyButton.setText("Delete Chosen Journey");
        DeleteJourneyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteJourneyButtonActionPerformed(evt);
            }
        });

        JourneyList.setModel(JourneyListModel);
        JourneyList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        JourneyList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JourneyListMouseClicked(evt);
            }
        });
        JourneyList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                JourneyListValueChanged(evt);
            }
        });
        jScrollPane7.setViewportView(JourneyList);

        JourneyInfo.setColumns(20);
        JourneyInfo.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        JourneyInfo.setRows(5);
        JourneyInfo.setText(JourneyInfoContent);
        jScrollPane8.setViewportView(JourneyInfo);

        jLabel10.setText("Journey List");

        jLabel11.setText("Journey Info");

        nextStationLabel.setText("Next Station");

        previousStationLabel.setText("Previous Station");

        JourneyLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        JourneyLabel1.setText("Prev");
        JourneyLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        JourneyLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                JourneyLabel1MousePressed(evt);
            }
        });

        JourneyLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        JourneyLabel2.setText("Next");
        JourneyLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        JourneyLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                JourneyLabel2MousePressed(evt);
            }
        });

        JourneyProgressBar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                JourneyProgressBarMousePressed(evt);
            }
        });

        JourneyLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        JourneyLabel3.setText("Info");
        JourneyLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        JourneyLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                JourneyLabel3MousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jLabel10)
                                .addGap(89, 89, 89))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(AddJourney, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(DeleteJourneyButton, javax.swing.GroupLayout.Alignment.LEADING))))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 331, Short.MAX_VALUE)
                        .addComponent(TimeLabel2))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(previousStationLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(nextStationLabel))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(JourneyLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(JourneyLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(JourneyProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(JourneyLabel2)))
                        .addContainerGap())))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(TimeLabel2)
                .addGap(16, 16, 16)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nextStationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(previousStationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JourneyProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(JourneyLabel1)
                                .addComponent(JourneyLabel2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JourneyLabel3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(AddJourney)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DeleteJourneyButton)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Journey Arrangement", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DriverListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_DriverListValueChanged
        int DriverIndex = DriverList.getSelectedIndex();
        if(DriverIndex!=-1)
        {
            DriverInfoContent = "DriverID:\t"+ CentralControl.driverList.get(DriverIndex).getID() + "\n" +
                            "Availability:\t" + (CentralControl.driverList.get(DriverIndex).getAvailability()==true?"Yes":"No") + "\n"+
                            "Name:\t\t" + CentralControl.driverList.get(DriverIndex).getName() + "\n"+
                            "Gender:\t\t" + CentralControl.driverList.get(DriverIndex).getGender() + "\n"+
                            "Age:\t\t" + CentralControl.driverList.get(DriverIndex).getAge() + "\n";
            this.DriverInfo.setText(DriverInfoContent);
        }
    }//GEN-LAST:event_DriverListValueChanged

    private void TrainsListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_TrainsListValueChanged
        int TrainIndex = TrainsList.getSelectedIndex();
        if (TrainIndex!=-1)
        {
        Train t=CentralControl.trainList.get(TrainIndex);
        String TrainInfoContent = "Train ID:\t"+ t.getID() + "\n" +
                            "Availability:\t" + (t.getAvailability()==true?"Yes":"No") + "\n"+
                            "NextStation:\t" + t.getTowardStation().getStation()+ "\n";
        this.TrainInfo.setText(TrainInfoContent);
        }
    }//GEN-LAST:event_TrainsListValueChanged

    private void AddTrainButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddTrainButtonActionPerformed
        String currentBiggestID = CentralControl.trainList.get(CentralControl.trainList.size()-1).getID().substring(1);
        String newIDNo = String.format("%04d", Integer.parseInt(currentBiggestID)+1);
        String newID = "T"+newIDNo;
        Train t = new Train(newID,true,new Station("A"));
        CentralControl.trainList.add(t);
        updateTrainList();
        JourneyMS.TrainUI.updateTrainList();
    }//GEN-LAST:event_AddTrainButtonActionPerformed

    private void DeleteTrainButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteTrainButtonActionPerformed
        int TrainIndex = TrainsList.getSelectedIndex();
        Train t=CentralControl.trainList.get(TrainIndex);
        Journey j = FindJourney(t);
        if (t.getAvailability()==true) //If the train is not in journey
        {
            CentralControl.trainList.remove(TrainIndex);
            updateTrainList();
        }
        //If the train is in journey, show warning instead.
        else JOptionPane.showMessageDialog(null, 
                "This train is in Journey "+j.getID()+"\nPlease remove the corresponding journey first", "Warning", JOptionPane.WARNING_MESSAGE);
        
    }//GEN-LAST:event_DeleteTrainButtonActionPerformed

    private void AddDriverButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddDriverButtonActionPerformed
        new DriverAddUI().setVisible(true);        
    }//GEN-LAST:event_AddDriverButtonActionPerformed

    private void DeleteDriverButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteDriverButtonActionPerformed
        int DriverIndex = DriverList.getSelectedIndex();
        Driver d=CentralControl.driverList.get(DriverIndex);
        Journey j = FindJourney(d);
        if (d.getAvailability()==true) 
        {
            CentralControl.driverList.remove(DriverIndex);
            updateDriverList();
        }
        else JOptionPane.showMessageDialog(null,
                "This driver is in Journey "+j.getID()+"\nPlease remove the corresponding journey first", "Warning", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_DeleteDriverButtonActionPerformed

    private void RoutesListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_RoutesListValueChanged
        int RouteIndex = RoutesList.getSelectedIndex();
        if (RouteIndex!=-1)
        {
            Route r=CentralControl.routeList.get(RouteIndex);
            String RouteInfoContent = "Route ID:\t"+ r.getID() + "\n" +
                                "Stations:\t" + r.getRoutesInString();
            this.RouteInfo.setText(RouteInfoContent);
        }
    }//GEN-LAST:event_RoutesListValueChanged

    private void AddRouteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddRouteButtonActionPerformed
        new RouteAddUI().setVisible(true);
    }//GEN-LAST:event_AddRouteButtonActionPerformed

    private void DeleteRouteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteRouteButtonActionPerformed
        int Index = RoutesList.getSelectedIndex();
        Route r = CentralControl.routeList.get(Index);
        int timesUsingCurrentRoute=0;
        String journeysUsingCurrentRoute = "";
        for (int i=0;i<CentralControl.journeyList.size();i++)
        {
            Journey j = CentralControl.journeyList.get(i);
            if (j.getRoute().getID().equals(r.getID()))
            {
                timesUsingCurrentRoute+=1;
                journeysUsingCurrentRoute+=j.getID()+" ";
            }
        }
        if (timesUsingCurrentRoute==0) 
        {
            CentralControl.routeList.remove(Index);
            updateRouteList();
        }
        else JOptionPane.showMessageDialog(null,
                "This route is used in Journey "+journeysUsingCurrentRoute+"\nPlease remove the corresponding journey first", "Warning", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_DeleteRouteButtonActionPerformed

    private void TimeLabelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TimeLabelMousePressed

    }//GEN-LAST:event_TimeLabelMousePressed

    private void TimeLabel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TimeLabel1MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_TimeLabel1MousePressed

    private void TimeLabel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TimeLabel2MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_TimeLabel2MousePressed

    private void AddJourneyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddJourneyActionPerformed
        new JourneyAddUI().setVisible(true);       // TODO add your handling code here:
    }//GEN-LAST:event_AddJourneyActionPerformed

    private void DeleteJourneyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteJourneyButtonActionPerformed
        int Index = JourneyList.getSelectedIndex();
        Journey j = CentralControl.journeyList.get(Index);
        if (j.IsFinished()==true||j.IsJourneyStarted()==false) //If the journey is not using yet
        {
            j.ReleaseJourney(); //Release the drivers and trains.
            CentralControl.journeyList.remove(Index);
            updateJourneyList();
        }
        else JOptionPane.showMessageDialog(null,
                "This journey is being used by:\n Train"+j.getTrain().getID()+" and Driver "+j.getDriver().getID()+
                        "Please wait until the journey finished",
                "Warning", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_DeleteJourneyButtonActionPerformed

    private void JourneyListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_JourneyListValueChanged
        JourneyIndex = JourneyList.getSelectedIndex();
        Journey j = null;
        if (JourneyIndex!=-1)
        {
            j=CentralControl.journeyList.get(JourneyIndex);
            JourneyInfoContent = "Journey ID:\t"+ j.getID()+"\n"+
                                    "Train ID:\t"+j.getTrain().getID()+"\n"+
                                    "Driver ID:\t"+j.getDriver().getID()+"\n"+
                                    "Route ID:\t"+j.getRoute().getID()+"\n"+
                                    "StartTime:\t"+j.getStartTime().getTimeInString();
            this.JourneyInfo.setText(JourneyInfoContent);  
            JouneyInfoRefresh();
        }
    }//GEN-LAST:event_JourneyListValueChanged

    private void JourneyListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JourneyListMouseClicked
        //this.JourneyList.updateUI();
        //this.JourneyList.setModel(JourneyListModel);
        //this.JourneyList.validate();
    }//GEN-LAST:event_JourneyListMouseClicked

    private void ClosingUI(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_ClosingUI
         this.setDefaultCloseOperation(HIDE_ON_CLOSE);
    }//GEN-LAST:event_ClosingUI

    private void JourneyLabel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JourneyLabel1MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_JourneyLabel1MousePressed

    private void JourneyLabel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JourneyLabel2MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_JourneyLabel2MousePressed

    private void JourneyProgressBarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JourneyProgressBarMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_JourneyProgressBarMousePressed

    private void JourneyLabel3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JourneyLabel3MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_JourneyLabel3MousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CentralControlUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CentralControlUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CentralControlUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CentralControlUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CentralControlUI().setVisible(true);
            }
        });
        
    }

    /**
     *
     * @param hour
     * @param minute
     */
    public void setSysTime(int hour, int minute)
    {
        //this.sysTime = hour+" "+minute;
    }

    /**
     *
     */
    public void updateDriverList()
    {
        DriverListModel.clear();
        if (CentralControl.driverList.size()!=0)
        {
            for (int i=0;i<CentralControl.driverList.size();i++)
            {
                DriverListModel.addElement(CentralControl.driverList.get(i).getID());
            }
        }
    }

    /**
     *
     */
    public void updateTrainList()
    {
        TrainListModel.clear();
        if (CentralControl.trainList.size()!=0)
        {
            for (int i=0;i<CentralControl.trainList.size();i++)
            {
                TrainListModel.addElement(CentralControl.trainList.get(i).getID());
            }
        }    
    }

    /**
     *
     */
    public void updateRouteList()
    {
        RouteListModel.clear();
        if (CentralControl.routeList.size()!=0)
        {
            for (int i=0;i<CentralControl.routeList.size();i++)
            {
                RouteListModel.addElement(CentralControl.routeList.get(i).getID());
            }
        }   
    }

    /**
     *
     */
    public void updateJourneyList()
    {
        JourneyListModel.clear();
        if (CentralControl.journeyList.size()!=0)
        {
            for (int i=0;i<CentralControl.journeyList.size();i++)
            {
                JourneyListModel.addElement(CentralControl.journeyList.get(i).getID());
            }
        }
    }

    /**
     *
     * @param t
     * @return
     */
    public Journey FindJourney(Train t)
    {
        for (int i=0; i<CentralControl.journeyList.size(); i++)
        {
            Journey j = CentralControl.journeyList.get(i);
            if (t.getID().equals(j.getTrain().getID()))
                return j;
        }
        return null;
    }

    /**
     *
     * @param d
     * @return
     */
    public Journey FindJourney(Driver d)
    {
        for (int i=0; i<CentralControl.journeyList.size(); i++)
        {
            Journey j = CentralControl.journeyList.get(i);
            if (d.getID().equals(j.getDriver().getID()))
                return j;
        }
        return null;
    }

    /**
     *
     * @param r
     * @return
     */
    public Journey FindJourney(Route r)
    {
        for (int i=0; i<CentralControl.journeyList.size(); i++)
        {
            Journey j = CentralControl.journeyList.get(i);
            if (r.getID().equals(j.getRoute().getID()))
                return j;
        }
        return null;
    }

    /**
     *
     */
    public void JouneyInfoRefresh()
    {
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Timer(delay, taskPerformer).start();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
            int delay = 250; //milliseconds
            ActionListener taskPerformer = new ActionListener() {
                    public void actionPerformed(ActionEvent evt) {
                        Journey j = null;
                        double totalLength = 0;
                        double passedLength = 0;
                        if (JourneyIndex!=-1)
                        {
                            j=CentralControl.journeyList.get(JourneyIndex);
                            if ((j.IsJourneyStarted()==true)&&(j.IsFinished()==false))
                            {
                                if (j.getTimeToNextOperation()!=null)
                                {
                                    totalLength = TimeControl.TimeCompare(j.getTimeToNextOperation(),j.getTimeOfLastOperation());
                                    passedLength = TimeControl.TimeCompare(JourneyMS.timeControl.CurrentTime(), j.getTimeOfLastOperation());
                                    if (j.IsMannuallyStarted()==false)
                                        percentage = (int)(passedLength/totalLength*100);
                                    else 
                                        percentage = passedPercentage+(int)(passedLength/totalLength*(100-passedPercentage));
                                    CentralControl.UI.JourneyLabel1.setText(j.getPreviousStation().getStation());
                                    CentralControl.UI.JourneyLabel2.setText(j.getNextStation().getStation());
                                    if (j.getTrain().getStatus()==true)
                                        CentralControl.UI.JourneyLabel3.setText("Completed: "+percentage+"%");
                                    if (j.getTrain().getStatus()==false)
                                        CentralControl.UI.JourneyLabel3.setText("Wait for 5 minutes:"+percentage+"%") ;
                                }
                                else passedPercentage=percentage;
                            }
                            // System.out.print(j.getID()+"-"+percentage+" ");
                            CentralControl.UI.JourneyProgressBar.setValue(percentage); 
                        }
                    }
            };
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddDriverButton;
    private javax.swing.JButton AddJourney;
    private javax.swing.JButton AddRouteButton;
    private javax.swing.JButton AddTrainButton;
    private javax.swing.JButton DeleteDriverButton;
    private javax.swing.JButton DeleteJourneyButton;
    private javax.swing.JButton DeleteRouteButton;
    private javax.swing.JButton DeleteTrainButton;
    public javax.swing.JTextArea DriverInfo;
    public javax.swing.JList<String> DriverList;
    public javax.swing.JTextArea JourneyInfo;
    public static javax.swing.JLabel JourneyLabel1;
    public static javax.swing.JLabel JourneyLabel2;
    public static javax.swing.JLabel JourneyLabel3;
    public javax.swing.JList<String> JourneyList;
    public static javax.swing.JProgressBar JourneyProgressBar;
    public javax.swing.JTextArea RouteInfo;
    public javax.swing.JList<String> RoutesList;
    public static javax.swing.JLabel TimeLabel;
    public static javax.swing.JLabel TimeLabel1;
    public static javax.swing.JLabel TimeLabel2;
    public javax.swing.JTextArea TrainInfo;
    public javax.swing.JList<String> TrainsList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel nextStationLabel;
    private javax.swing.JLabel previousStationLabel;
    // End of variables declaration//GEN-END:variables
}
